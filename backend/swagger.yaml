openapi: 3.0.1
info:
  title: API document for Multi-sig actix-web backend
  description: ""
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: contact@crypto.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"
servers:
  - url: "http://localhost:8080/"
tags:
  - name: All
paths:
  /generate-keys:
    post:
      tags:
        - All
      summary: For buyer to get public and view key.
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
        - name: buyer_public_key
          in: query
          description: Buyer public key generated by order id.
          required: true
          schema:
            type: string
            example: 02dc0cc2d6ba0cae2f8f0ec2368c21e54b6e758cc2e13fcbf46752f9a4d9cbd3de
        - name: buyer_view_key
          in: query
          description: Buyer view key generated by order id.
          required: true
          schema:
            type: string
            example: 03ef729e7a7e02817545ffa2df38af48481c86afa74ba1d7c7801276edfb6e6568
        - name: escrow_public_key
          in: query
          description: Escrow public key generated by order id.
          required: true
          schema:
            type: string
            example: 024e6a025af013fd13fed03436d0793eff952d759a7ed8de7c3f90937c9c936e82
        - name: escrow_view_key
          in: query
          description: Escrow view key generated by order id.
          required: true
          schema:
            type: string
            example: 0243faa6244305ac06b63c126ce03f77ae56c3c60c3331e0dd40fee358ca423518
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Keys"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /submit-commitment-and-nonce:
    post:
      tags:
        - All
      summary: For buyer to get commitment and nonce.
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
        - name: tx_id
          in: query
          description: Payment to 2-of-3 multi-sig created and paid by buyer for the order.
          required: true
          schema:
            type: string
            example: tx_id
        - name: commitment
          in: query
          description: Generated by buyer per order id.
          required: true
          schema:
            type: string
            example: 43143ab9f10aa4247d6568de534e11af19315ce7b4558093f9d7df2838f78568
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/CommitmentAndNonce"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /submit-partial-signature-and-nonce:
    post:
      tags:
        - All
      summary: >-
        For buyer to submit partial signature and nonce.
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
        - name: partial_signature
          in: query
          description: Partially signed result from buyer.
          required: true
          schema:
            type: string
            example: 08ae1301f5b9b10c74320ce9b7bb03f60fda4a90c79b0fc89779e43d84911361
        - name: nonce
          in: query
          description: Nonce used in the generation of previous buyer_commitment.
          required: true
          schema:
            type: string
            example: 0304fb090e02b6c1bc5fd7acf5d0363314141ee642cc1656c038cf876274f3f042
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/BroadcasgtedTransaction"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
components:
  schemas:
    Keys:
      type: object
      properties:
        public_key:
          type: string
          format: H256
          example: 02dc0cc2d6ba0cae2f8f0ec2368c21e54b6e758cc2e13fcbf46752f9a4d9cbd3de
        view_key:
          type: string
          format: H256
          example: 03ef729e7a7e02817545ffa2df38af48481c86afa74ba1d7c7801276edfb6e6568
    CommitmentAndNonce:
      type: object
      properties:
        commitment:
          type: string
          format: H256
          example: 77d5925439c9f3f1a8d9716738022fb32f4db3eac21dae0d2014a32e2c65a349
        nonce:
          type: string
          format: H256
          example: 0255e6f3dc7ff313d7e6efa6dff119e8e83f4b91b477f09ca6f6dea3fd6c6a6934
    BroadcasgtedTransaction:
      type: object
      properties:
        tx_id:
          type: string
          format: H256
          example: tx_id
