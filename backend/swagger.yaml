openapi: 3.0.1
info:
  title: API document for Multi-sig actix-web backend
  description: ""
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: contact@crypto.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"
servers:
  - url: "http://localhost:8080/"
tags:
  - name: All
paths:
  /order/new:
    post:
      tags:
        - All
      summary: For buyer to create a order and get public and view key from merchant.
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
        - name: buyer_public_key
          in: query
          description: Buyer public key generated by order id.
          required: true
          schema:
            type: string
            example: 02dc0cc2d6ba0cae2f8f0ec2368c21e54b6e758cc2e13fcbf46752f9a4d9cbd3de
        - name: buyer_view_key
          in: query
          description: Buyer view key generated by order id.
          required: true
          schema:
            type: string
            example: 03ef729e7a7e02817545ffa2df38af48481c86afa74ba1d7c7801276edfb6e6568
        - name: buyer_address
          in: query
          description: Buyer address to receive deposit or refunds after confirmation.
          required: true
          schema:
            type: string
            example: tcro
        - name: escrow_public_key
          in: query
          description: Escrow public key generated by order id.
          required: true
          schema:
            type: string
            example: 024e6a025af013fd13fed03436d0793eff952d759a7ed8de7c3f90937c9c936e82
        - name: escrow_view_key
          in: query
          description: Escrow view key generated by order id.
          required: true
          schema:
            type: string
            example: 0243faa6244305ac06b63c126ce03f77ae56c3c60c3331e0dd40fee358ca423518
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  public_key:
                    type: string
                    example: 02dc0cc2d6ba0cae2f8f0ec2368c21e54b6e758cc2e13fcbf46752f9a4d9cbd3de
                  view_key:
                    type: string
                    example: 03ef729e7a7e02817545ffa2df38af48481c86afa74ba1d7c7801276edfb6e6568
                    x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order/payment-proof:
    post:
      tags:
        - All
      summary: For buyer to submit transaction id of the payment to the 2-of-3 multi-sig address and nonce commitment to be used in the future signing process.
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
        - name: transaction_id
          in: query
          description: Payment to 2-of-3 multi-sig created and paid by buyer for the order.
          required: true
          schema:
            type: string
            example: transaction_id
        - name: commitment
          in: query
          description: Generated by buyer per order id.
          required: true
          schema:
            type: string
            example: 43143ab9f10aa4247d6568de534e11af19315ce7b4558093f9d7df2838f78568
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: string
                    example: 1
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order/delivering:
    post:
      tags:
        - All
      summary: >-
        For merchant/escrow to mark the order as delivering
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
      responses:
        "200":
          description: Order status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order/refunding:
    post:
      tags:
        - All
      summary: >-
        For merchant/escrow to refund the order
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
      responses:
        "200":
          description: Order status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order:
    get:
      tags:
        - All
      summary: >-
        For buyer to query the status of an order
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
      responses:
        "200":
          description: Order status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order/confirm/delivery:
    post:
      tags:
        - All
      summary: >-
        For buyer to submit confirm delivery with partial signature and nonce.
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
        - name: partial_signature
          in: query
          description: Partially signed result from buyer.
          required: true
          schema:
            type: string
            example: 08ae1301f5b9b10c74320ce9b7bb03f60fda4a90c79b0fc89779e43d84911361
        - name: nonce
          in: query
          description: Nonce used in the generation of previous buyer_commitment.
          required: true
          schema:
            type: string
            example: 0304fb090e02b6c1bc5fd7acf5d0363314141ee642cc1656c038cf876274f3f042
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction_id:
                    type: string
                    example: transaction-id
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order/confirm/refund:
    post:
      tags:
        - All
      summary: >-
        For buyer to submit refund with partial signature and nonce.
      parameters:
        - name: order_id
          in: query
          description: Unique order id from shopping cart.
          required: true
          schema:
            type: string
            example: 1
        - name: partial_signature
          in: query
          description: Partially signed result from buyer.
          required: true
          schema:
            type: string
            example: 08ae1301f5b9b10c74320ce9b7bb03f60fda4a90c79b0fc89779e43d84911361
        - name: nonce
          in: query
          description: Nonce used in the generation of previous buyer_commitment.
          required: true
          schema:
            type: string
            example: 0304fb090e02b6c1bc5fd7acf5d0363314141ee642cc1656c038cf876274f3f042
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction_id:
                    type: string
                    example: transaction-id
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order/pending:
    get:
      tags:
        - All
      summary: >-
        Get list of pending orders
      responses:
        "200":
          description: Order status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order/outstanding:
    get:
      tags:
        - All
      summary: >-
        Get list of pending payment orders
      responses:
        "200":
          description: Order status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
  /order/complete:
    get:
      tags:
        - All
      summary: >-
        Get list of completed orders, including both completed and refunded
      responses:
        "200":
          description: Order status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
          x-responseId: SuccessfulOperation
          x-uppercaseResponseId: SUCCESSFUL_OPERATION
components:
  schemas:
    Order:
      type: object
      properties:
        order_id:
          type: string
          example: 1
        status:
          type: string
          enum:
            [
              "PendingPayment",
              "PendingResponse",
              "Delivering",
              "Refunding",
              "Completed",
              "Refunded",
            ]
        amount:
          description: Order amount in base unit of CRO
          type: string
          example: "1000"
        buyer_public_key:
          type: string
          example: 03bd1217267d99cbc1c38b9ef036eb2ffd6a2c5f6225a0ef9884d859a0a0bcddcd
        buyer_view_key:
          type: string
          example: 02e647588828f33135652899152cbc12bef4db997b50bc59347e306debb22a8d44
        escrow_public_key:
          type: string
          example: 03bd1217267d99cbc1c38b9ef036eb2ffd6a2c5f6225a0ef9884d859a0a0bcddcd
        escrow_view_key:
          type: string
          example: 02e647588828f33135652899152cbc12bef4db997b50bc59347e306debb22a8d44
        session_id:
          description: ID of the multi-sig session
          type: string
          example:
        payment_transaction_id:
          type: string
          example: payment-tx-id
        settlement_transaction_id:
          type: string
          example: settlement-tx-id
        nonce_commitment:
          type: string
          example: 02oddc0cc2d6ba0cae2f8f0ec2368c21e54b6e758cc2e13fcbf46752f9a4d9cbd3de
        nonce:
          type: string
          example: 03ef729e7a7e02817545ffa2df38af48481c86afa74ba1d7c7801276edfb6e6568
